{"version":3,"file":"typeorm.js","sources":["../../../src/lib/typeorm.ts"],"sourcesContent":["import { Condition } from '@ucast/core';\nimport { SelectQueryBuilder } from 'typeorm';\nimport {\n  createSqlInterpreter,\n  allInterpreters,\n  SqlOperator,\n  createDialects,\n  mysql\n} from '../index';\n\nfunction joinRelation<Entity>(relationName: string, query: SelectQueryBuilder<Entity>) {\n  const meta = query.expressionMap.mainAlias!.metadata;\n  const relation = meta.findRelationWithPropertyPath(relationName);\n\n  if (relation) {\n    query.innerJoin(`${query.alias}.${relationName}`, relationName);\n    return true;\n  }\n\n  return false;\n}\n\nconst dialects = createDialects({\n  joinRelation,\n  paramPlaceholder: mysql.paramPlaceholder,\n});\n\n// eslint-disable-next-line no-multi-assign\ndialects.sqlite.escapeField = dialects.sqlite3.escapeField = dialects.pg.escapeField;\n\nexport function createInterpreter(interpreters: Record<string, SqlOperator<any>>) {\n  const interpretSQL = createSqlInterpreter(interpreters);\n\n  return <Entity>(condition: Condition, query: SelectQueryBuilder<Entity>) => {\n    const dialect = query.connection.options.type as keyof typeof dialects;\n    const options = dialects[dialect];\n\n    if (!options) {\n      throw new Error(`Unsupported database dialect: ${dialect}`);\n    }\n\n    const [sql, params] = interpretSQL(condition, options, query);\n    return query.where(sql, params);\n  };\n}\n\nexport const interpret = createInterpreter(allInterpreters);\n"],"names":["joinRelation","relationName","query","meta","expressionMap","mainAlias","metadata","relation","findRelationWithPropertyPath","innerJoin","alias","dialects","createDialects","paramPlaceholder","mysql","sqlite","escapeField","sqlite3","pg","createInterpreter","interpreters","interpretSQL","createSqlInterpreter","condition","dialect","connection","options","type","Error","sql","params","where","interpret","allInterpreters"],"mappings":";;AAUA,SAASA,YAAT,CAA8BC,YAA9B,EAAoDC,KAApD,EAAuF;AACrF,QAAMC,IAAI,GAAGD,KAAK,CAACE,aAAN,CAAoBC,SAApB,CAA+BC,QAA5C;AACA,QAAMC,QAAQ,GAAGJ,IAAI,CAACK,4BAAL,CAAkCP,YAAlC,CAAjB;;AAEA,MAAIM,QAAJ,EAAc;AACZL,IAAAA,KAAK,CAACO,SAAN,CAAiB,GAAEP,KAAK,CAACQ,KAAM,IAAGT,YAAa,EAA/C,EAAkDA,YAAlD;AACA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,MAAMU,QAAQ,GAAGC,cAAc,CAAC;AAC9BZ,EAAAA,YAD8B;AAE9Ba,EAAAA,gBAAgB,EAAEC,KAAK,CAACD;AAFM,CAAD,CAA/B;;AAMAF,QAAQ,CAACI,MAAT,CAAgBC,WAAhB,GAA8BL,QAAQ,CAACM,OAAT,CAAiBD,WAAjB,GAA+BL,QAAQ,CAACO,EAAT,CAAYF,WAAzE;AAEO,SAASG,iBAAT,CAA2BC,YAA3B,EAA2E;AAChF,QAAMC,YAAY,GAAGC,oBAAoB,CAACF,YAAD,CAAzC;AAEA,SAAO,CAASG,SAAT,EAA+BrB,KAA/B,KAAqE;AAC1E,UAAMsB,OAAO,GAAGtB,KAAK,CAACuB,UAAN,CAAiBC,OAAjB,CAAyBC,IAAzC;AACA,UAAMD,OAAO,GAAGf,QAAQ,CAACa,OAAD,CAAxB;;AAEA,QAAI,CAACE,OAAL,EAAc;AACZ,YAAM,IAAIE,KAAJ,CAAW,iCAAgCJ,OAAQ,EAAnD,CAAN;AACD;;AAED,UAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBT,YAAY,CAACE,SAAD,EAAYG,OAAZ,EAAqBxB,KAArB,CAAlC;AACA,WAAOA,KAAK,CAAC6B,KAAN,CAAYF,GAAZ,EAAiBC,MAAjB,CAAP;AACD,GAVD;AAWD;MAEYE,SAAS,GAAGb,iBAAiB,CAACc,eAAD;;;;"}